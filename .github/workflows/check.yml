name: Check pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

  push:
    branches:
      - master
    tags:
      - v[0-9]+

jobs:
  release-info:
    name: Get release info
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    outputs:
      issue-update: ${{ steps.find-issues.outputs.issues }}
      issue-create: ${{ steps.create-issue.outputs.issue-number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get info
        id: get-info
        run: |
          version=$(git describe --tags --abbrev=0)
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "author=$(git show ${version} | grep Author -m 1)" >> $GITHUB_OUTPUT
          echo "date=$(git show ${version} | grep Date -m 1)" >> $GITHUB_OUTPUT

      - name: Find issues
        uses: actions-cool/issues-helper@v3
        id: find-issues
        with:
          actions: "find-issues"
          token: ${{secrets.GITHUB_TOKEN}}
          issue-state: "open"
          title-includes: ${{ steps.get-info.outputs.version }}
          labels: "RELEASE"

      - name: Create issue
        if: steps.find-issues.outputs.issues == '[]'
        uses: actions-cool/issues-helper@v3
        id: create-issue
        with:
          actions: "create-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Release ${{steps.get-info.outputs.version }}
          body: |
            Version: ${{ steps.get-info.outputs.version }}
            ${{ steps.get-info.outputs.author }}
            ${{ steps.get-info.outputs.date }}
          labels: "RELEASE"

  commitlint:
    name: CommitLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: ESLint
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Build project
        run: npm run build

  test-unit:
    name: Unit test
    needs: [release-info]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run unit test
        run: npm run test-ci:unit
        env:
          JEST_JUNIT_OUTPUT_NAME: jest.xml

      - name: Test report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Report jest test
          path: jest.xml
          reporter: jest-junit

  test-e2e:
    name: e2e test
    needs: [release-info]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Install playwright
        run: npx playwright install --with-deps chromium

      - name: Run e2e test
        run: npm run test-ci:e2e
        env:
          PLAYWRIGHT_JUNIT_OUTPUT_NAME: playwright.xml

      - name: Test report
        uses: dorny/test-reporter@v1
        id: e2e-report
        if: always()
        with:
          name: Report playwright test
          path: playwright.xml
          reporter: jest-junit

      - name: Add report to issue
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
        uses: actions-cool/issues-helper@v3
        with:
          actions: "create-comment"
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ needs.release-info.outputs.issue-create }}
          body: |
            [e2e test results](${{ github.server_url }}/${{ github.repository }}/runs/${{ steps.e2e-report.id }})
